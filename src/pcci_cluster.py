# -*- coding: utf-8 -*-
"""PCCI cluster

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1p_E6Oe9wF15Khwq7F-OXSsS1DMfjxUtW
"""

#code snippet 1
#Installing h2o
!pip install h2o

#code snippet 2
#Importing h2o
import h2o

#initialize h2o
h2o.init()

# Code snippet 3
# Importing dataset
data = h2o.import_file('https://raw.githubusercontent.com/nvamsimohan/DallasDSA/main/PCCI%20Cases%20Readmit30%20Data.csv')


data

#code snippet 4
#Importing Kmeans Estimator
from h2o.estimators.kmeans import H2OKMeansEstimator

#code snippet 5
#setting the number of clusters in the data train as 4
kmeans_model = H2OKMeansEstimator(k=4)

#Train the clustering model
kmeans_model.train(training_frame=data)

#code snippet 6
#Displaying the cluster size
kmeans_model.size()

# Code Snippet 7
# Import libraries
import pandas as pd

# Predict clusters for each row
pred = kmeans_model.predict(data)

# Join prediction to the original dataset
data_with_clusters = data.cbind(pred)

# Convert to pandas DataFrame
df = data_with_clusters.as_data_frame()

# ==========================
# Numeric variables
# ==========================
numeric_cols = [
    "Age", "Bmi", "Weight", "Height", "Pulse", "Temperature",
    "Pat_Pain_Score", "ER_Visits", "IP_Visits", "Chronic_Conditions",
    "Glucose", "Cost_Of_Initial_Stay"
]

numeric_summary = df.groupby("predict")[numeric_cols].mean()

# ==========================
# Categorical variables
# ==========================
categorical_cols = [
    "Admit_Week", "Admit_Month", "Gender", "Marital_Status",
    "Insurance_Provider", "Tobacco_User", "Depression", "ICU",
    "Drug_Abuse", "Mood_Disorder", "Diabetes", "Anxiety",
    "Obesity", "Dementia", "Condition", "Care_Plan_Following_Discharge"
]

categorical_summary = {}
for col in categorical_cols:
    categorical_summary[col] = (
        df.groupby("predict")[col]
        .value_counts(normalize=True)
        .unstack(fill_value=0)
    )

# ==========================
# Code Snippet 8
# ==========================
# Combine summaries
# ==========================

# Merge all categorical summary DataFrames into a single one
categorical_df = pd.concat(categorical_summary.values(), axis=1)

# Combine with numeric summary
cluster_profiles = numeric_summary.join(categorical_df, how="left")

# Export to CSV
cluster_profiles.to_csv("cluster_profiles.csv", index=True)

# Display in console
print(cluster_profiles)